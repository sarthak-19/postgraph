/*
 * Copyright (C) 2023 PostGraphDB
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 */
LOAD 'postgraph';
SET search_path TO postgraph;
--Basic Route Creation
SELECT build_variable_edge(
	build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map())
);
                               build_variable_edge                                
----------------------------------------------------------------------------------
 [{"id": 1, "start_id": 2, "end_id": 3, "label": "edge_label", "properties": {}}]
(1 row)

SELECT build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
	build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
                                                                                                  build_variable_edge                                                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 1, "start_id": 2, "end_id": 3, "label": "edge_label", "properties": {}}, {"id": 3, "label": "vertex_label", "properties": {}}, {"id": 4, "start_id": 3, "end_id": 5, "label": "edge_label", "properties": {}}]
(1 row)

SELECT build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('5'::graphid, $$vertex_label$$, gtype_build_map())
);
ERROR:  VariableEdges must end with an edge
SELECT build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
ERROR:  arguement 1 build_traversal() must be a vertex
SELECT build_traversal(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        NULL
);
 build_traversal 
-----------------
 
(1 row)

SELECT 
'2'::graphid !>=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 t
(1 row)

SELECT 
build_vertex('2'::graphid, $$label$$, gtype_build_map()) !>=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 t
(1 row)

SELECT
'3'::graphid !>=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

SELECT
build_vertex('3'::graphid, $$label$$, gtype_build_map()) !>=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

SELECT
'2'::graphid @>=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

SELECT 
build_vertex('2'::graphid, $$label$$, gtype_build_map()) @>=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

SELECT
'3'::graphid @>=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 t
(1 row)

SELECT
build_vertex('3'::graphid, $$label$$, gtype_build_map()) @>=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 t
(1 row)

SELECT
'5'::graphid !<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

SELECT
'3'::graphid !<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 t
(1 row)

SELECT
'2'::graphid !<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

SELECT
build_vertex('5'::graphid, $$label$$, gtype_build_map()) !<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

SELECT
build_vertex('3'::graphid, $$label$$, gtype_build_map()) !<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 t
(1 row)

SELECT
build_vertex('2'::graphid, $$label$$, gtype_build_map()) !<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

SELECT
'5'::graphid @<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 t
(1 row)

SELECT
'3'::graphid @<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

SELECT
'2'::graphid @<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

SELECT
build_vertex('5'::graphid, $$label$$, gtype_build_map()) @<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 t
(1 row)

SELECT
build_vertex('3'::graphid, $$label$$, gtype_build_map()) @<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

SELECT
build_vertex('2'::graphid, $$label$$, gtype_build_map()) @<=
build_variable_edge(
        build_edge('1'::graphid, '2'::graphid, '3'::graphid, $$edge_label$$, gtype_build_map()),
        build_vertex('3'::graphid, $$vertex_label$$, gtype_build_map()),
        build_edge('4'::graphid, '3'::graphid, '5'::graphid, $$edge_label$$, gtype_build_map())
);
 ?column? 
----------
 f
(1 row)

